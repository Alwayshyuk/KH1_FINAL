<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다.
	 - myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다.
	 - 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다.
	 - 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다.
	 - 일반적으로 namespace는 테이블명으로 한다.
	 	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
		- <insert>
		- <select>
		- <update>
		- <delete>
	 
	 - 각 구문은 반드시 아이디를 가져야 한다.
	 - 각 구문에는 다음과 같은 속성을 작성할 수 있다.
	 	- parameterType: 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능)
	 	- resultType: 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
	 		-(주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 알려준다)
	 - 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다.
	 	- 정적 바인딩: ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다.
	 	- 동적 바인딩: #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다.(DTO 변수명)
 -->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="chatroom">
 	<select id="sequence" resultType="int">
 		select chatroom_seq.nextval from dual
 	</select>
 	<insert id="insert" parameterType="ChatRoomDto">
 		insert into chatroom values(#{chatRoomNo}, #{auctionNo})
 	</insert>
 	<select id="one" parameterType="ChatRoomSelectVO" resultType="int">
 		select count(cr.chatroom_no) from chatroom cr inner join chatparticipator cp
		on cr.chatroom_no = cp.chatroom_no where cr.auction_no = #{auctionNo} and cp.member_no=#{memberNo}
 	</select>
 	<!-- 
 	<select id="list" resultType="ChatRoomListVO">
 		select m.member_Nick, cc.chat_content, cc.chat_time from member m join chat_content cc on m.member_no = cc.chatter_no
        where m.member_no = #{memberNo} and cc.chatroom_no = #{chatRoomNo}
 	</select>
 	 -->
 	 <select id="list" parameterType="int" resultType="ChatRoomListVO">
		select distinct cr.chatroom_no, cr.auction_no, cp.member_no, mm.member_nick, mm.attachment_no, cc.chat_content, to_char(cc.chat_time, 'MM-DD hh24:mi')"chat_time"
	    from chatroom cr, chatparticipator cp, chat_content cc, member mm
	    where cr.chatroom_no in 
	    (select cp.chatroom_no from chatparticipator cp where cp.member_no=#{memberNo}) 
	    and 
	    not cp.member_no=#{memberNo}
	    and 
	    cc.chatroom_no = cr.chatroom_no 
	    and 
	    mm.member_no = cp.member_no
	    and
	    not cp.chatroom_status = 0 
	    order by to_char(cc.chat_time, 'MM-DD hh24:mi') desc
 	 </select>
 	 <select id="auctionOne" parameterType="int" resultType="AuctionDetailVO">
  		select * from auction a where auction_no in(select auction_no from chatroom where chatroom_no=#{chatRoomNo}); 
 	 </select>
 </mapper>