<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
	- 일반적으로 namespace는 테이블명으로 한다!
	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
		- <insert>
		- <select>
		- <update>
		- <delete>
	- 각 구문은 반드시 아이디를 가져야 한다.
	- 각 구문에는 다음과 같은 속성을 작성할 수 있다
		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능, 선택)
		- resultType : 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
			- (주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 알려준다)
	- 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다
		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다(DTO 변수명)
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auction">

	<!-- 시퀸스 생성 -->
	<select id="sequence" resultType="int">
		select auction_seq.nextval from dual
	</select>

	<!-- 경매 등록 -->	
	<insert id="insert" parameterType="AuctionDto">
		insert into auction(
			auction_no, auctioneer_no, category_no, 
			auction_title, auction_content,
			auction_closed_time, auction_opening_bid, auction_closing_bid,
			auction_bid_unit, auction_status
		)
		values(
			#{auctionNo}, #{auctioneerNo}, #{categoryNo},
			#{auctionTitle}, #{auctionContent},
			to_date(#{auctionClosedTime}, 'YYYY-MM-DD HH24:MI'), #{auctionOpeningBid}, #{auctionClosingBid},
			#{auctionBidUnit}, #{auctionStatus}
		)
	</insert>
	
	<!-- 특정 회원이 가장 최근 등록한 경매 조회 -->
	<select id="recent" resultType="AuctionDto" parameterType="int">
		select * from auction where auctioneer_no = #{auctioneerNo} and auction_no = (select max(auction_no) from auction)
	</select>

	<!-- 경매 목록 조회 -->	
	<select id="list" resultType="AuctionListVO" parameterType="int">
		select A.auction_no, min(B.photo_attachment_no) photo_attachment_no, 
			A.auction_title, A.auction_opening_bid, max(C.bidding_price) bidding_price, A.auction_closed_time 
		from auction A
        join photo B on A.auction_no = B.photo_auction_no
        left join bidding C on A.auction_no = C.auction_no
        group by A.auction_no, A.auction_title, A.auction_opening_bid, A.auction_closed_time
        order by A.auction_no desc
	</select>
	
	<!-- 경매 상세 조회 -->
	<select id="detail" resultType="AuctionDetailVO" parameterType="Map">
		select * from (
		    select rownum rn, TMP.* from (
				select max(B.bidding_price) max_bidding_price, C.my_bidding_price, 
					A.auction_no, A.auctioneer_no, A.category_no, A.auction_title, A.auction_content, A.auction_closed_time, 
					A.auction_opening_bid, A.auction_closing_bid, A.auction_bid_unit, A.auction_status 
				from auction A
		        join bidding B on A.auction_no = B.auction_no
		        join (select auction_no, max(bidding_price) my_bidding_price from bidding where bidder_no = #{bidderNo} group by auction_no) C 
		        	on A.auction_no = C.auction_no
		        where A.auction_no = #{auctionNo}
		        group by B.bidding_price, C.my_bidding_price, A.auction_no, A.auctioneer_no, A.category_no, 
			        A.auction_title, A.auction_content, A.auction_closed_time, A.auction_opening_bid, 
			        A.auction_closing_bid, A.auction_bid_unit, A.auction_status
		        order by B.bidding_price desc
		    )TMP
		) where rn = 1
	</select>

</mapper> 